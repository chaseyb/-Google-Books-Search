{"ast":null,"code":"var _jsxFileName = \"/Users/Chase/Desktop/Google-Books-Search/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { SET_CURRENT_POST, REMOVE_POST, UPDATE_POSTS, ADD_POST, ADD_FAVORITE, UPDATE_FAVORITES, REMOVE_FAVORITE, LOADING } from \"./actions\";\nconst StoreContext = createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_CURRENT_POST:\n      return { ...state,\n        currentPost: action.post,\n        loading: false\n      };\n\n    case UPDATE_POSTS:\n      return { ...state,\n        posts: [...action.posts],\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.post, ...state.posts],\n        loading: false\n      };\n\n    case REMOVE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => {\n          return post._id !== action._id;\n        })\n      };\n\n    case ADD_FAVORITE:\n      return { ...state,\n        favorites: [action.post, ...state.favorites],\n        loading: false\n      };\n\n    case UPDATE_FAVORITES:\n      return { ...state,\n        favorites: [...state.favorites],\n        loading: false\n      };\n\n    case REMOVE_FAVORITE:\n      return { ...state,\n        favorites: state.favorites.filter(post => {\n          return post._id !== action._id;\n        })\n      };\n\n    case LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    posts: [],\n    currentPost: {\n      _id: 0,\n      title: \"\",\n      body: \"\",\n      author: \"\"\n    },\n    favorites: [],\n    loading: false\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/Chase/Desktop/Google-Books-Search/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","SET_CURRENT_POST","REMOVE_POST","UPDATE_POSTS","ADD_POST","ADD_FAVORITE","UPDATE_FAVORITES","REMOVE_FAVORITE","LOADING","StoreContext","Provider","reducer","state","action","type","currentPost","post","loading","posts","filter","_id","favorites","StoreProvider","value","props","dispatch","title","body","author","useStoreContext"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  SET_CURRENT_POST,\n  REMOVE_POST,\n  UPDATE_POSTS,\n  ADD_POST,\n  ADD_FAVORITE,\n  UPDATE_FAVORITES,\n  REMOVE_FAVORITE,\n  LOADING\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case SET_CURRENT_POST:\n    return {\n      ...state,\n      currentPost: action.post,\n      loading: false\n    };\n\n  case UPDATE_POSTS:\n    return {\n      ...state,\n      posts: [...action.posts],\n      loading: false\n    };\n\n  case ADD_POST:\n    return {\n      ...state,\n      posts: [action.post, ...state.posts],\n      loading: false\n    };\n\n  case REMOVE_POST:\n    return {\n      ...state,\n      posts: state.posts.filter((post) => {\n        return post._id !== action._id; \n      })\n    };\n\n  case ADD_FAVORITE:\n    return {\n      ...state,\n      favorites: [action.post, ...state.favorites],\n      loading: false\n    };\n\n  case UPDATE_FAVORITES:\n    return {\n      ...state,\n      favorites: [...state.favorites],\n      loading: false\n    };\n\n  case REMOVE_FAVORITE:\n    return {\n      ...state,\n      favorites: state.favorites.filter((post) => {\n        return post._id !== action._id; \n      })\n    };\n\n  case LOADING:\n    return {\n      ...state,\n      loading: true\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    posts: [],\n    currentPost: {\n      _id: 0,\n      title: \"\",\n      body: \"\",\n      author: \"\"\n    },\n    favorites: [],\n    loading: false\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}